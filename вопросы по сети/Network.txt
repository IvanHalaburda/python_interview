Transport Layer Security (TLS)
TLS — наследник SSL — это такой протокол, наиболее часто применяемый для обеспечения безопасного HTTP соединения (так называемого HTTPS). TLS расположен на уровень ниже протокола HTTP в модели OSI. Объясняя на пальцах, это означает, что в процессе выполнения запроса сперва происходят все “вещи”, связанные с TLS-соединением и уже потом, все что связано с HTTP-соединением.

1.только обладатель приватного ключа может дешифровать сообщение зашифрованное паблик ключом.

2.С помощь публичного ключа можно определить было ли зашифровано сообщение приватным ключом этого же отправителя.


								Установление связи
1. Сервер отправляет свой сертификат с паблик ключом. Мы чекаем реально ли этот сайт то, за кого себя выдыает(пункт 2).

2. Если он тот, за кого себя выдает шифруем новый ключ нашего сообщения его паблик ключом.

3. Сервер дешифрует наше сообщение своим приватным ключом(пункт 1)

4. Только вы и сервер знаете новый ключ, которым шифруются ваши сообщения


								Сертфикат

1. Сайт отправляет свой приватный ключ и паблик, что компания, выдающая сертификат, подписала их
2. Компания, выдающая сертификат, подписывает ключи сайта своим публичным ключом
3. Браузер с помощью паблик ключа компании чекает, реально ли сайт подписан компанией(пункт 2). Список проверенных компаний и их паблик ключи установлены в браузер.


								UDP/TCP
Протокол TCP (Transmission Control Protocol) – это сетевой протокол, который «заточен» под соединение. Иными словами, прежде, чем начать обмен данными, данному протоколу требуется установить соединение между двумя хостами. Данный протокол имеет высокую надежность, поскольку позволяет не терять данные при передаче, запрашивает подтверждения о получении от принимающей стороны и в случае необходимости отправляет данные повторно. При этом отправляемые пакеты данных сохраняют порядок отправки, то есть можно сказать, что передача данных упорядочена. Минусом данного протокола является относительно низкая скорость передачи данных, за счет того что выполнение надежной и упорядоченной передачи занимает больше времени, чем в альтернативном протоколе UDP.

Протокол UDP (User Datagram Protocol), в свою очередь, более прост. Для передачи данных ему не обязательно устанавливать соединение между отправителем и получателем. Информация передается без предварительной проверки готовности принимающей стороны. Это делает протокол менее надежным – при передаче некоторые фрагменты данных могут теряться. Кроме того, упорядоченность данных не соблюдается – возможен непоследовательный прием данных получателем. Зато скорость передачи данных по данному транспортному протоколу будет более высокой.

Надежность: в этом случае предпочтительнее будет протокол TCP, за счет подтверждения получения данных, повторной отправки в случае необходимости, а также использованию такого инструмента как тайм-аут. Протокол UDP такого инструментария не имеет, а потому при получении отправленные данные могут приходить не полностью;
Упорядоченность: опять будет предпочтительнее TCP, поскольку этот протокол гарантирует передачу пакетов данных именно в том порядке, в котором они были отправлены. В случае с UDP такой порядок не соблюдается;
Скорость: здесь уже лидировать будет UDP, так как более тяжеловесному TCP-протоколу будет требоваться больше времени для установки соединения, подтверждения получения, повторной отправки данных и т.д. ;
Метод передачи данных: в случае с TCP данные передаются потоково, границы фрагментов данных не имеют обозначения. В случае с UDP данные передаются в виде датаграмм – проверка пакетов на целостность осуществляется принимающей стороной только в случае получения сообщения. Также пакеты данных имеют определенные обозначения граница

								Путь "интернет-пакета"
Работа в интернете сводится к простому алгоритму действий:

Вводим в адресную строку браузера требуемый DNS-путь.
Маршрутизатор ведет запрос к серверу, на котором хранится запрашиваемая информация (сайт).
DNS-сервер преобразует путь в IP адрес.
Мы скачиваем или изучаем нужный файл с компьютера, находящегося в любом конце света.
Путь: ПК → Роутер → DNS-сервер → Сервер сайта → DNS-сервер → Роутер → ПК

							NAT(Network Adress Translation)
Несколько компуктеров объединены в  локальную сеть. Выходят в интернет через один ip адрес, который им дает NAT. У них есть свой айпи и свои порты внутри локалки, но для выхода в тырнет нат-устройство дает им один айпи и разные порты. Помогает решить проблему ограниченного количества айпи адресов (2^32). Недостатки: нет четких правил как должен работать нат, некоторые протоколы могут работать некорректно(они сперва устанавливают соединение, а потом уже отправляюют данные: FTP), нарушает правило тырнета что каждый компик может подлючиться к каждому компику.