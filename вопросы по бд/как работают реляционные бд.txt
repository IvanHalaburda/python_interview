В Реляционной БД все данные хранятся в таблицах(relation).
Строка в РБД является одной записью, а столбцы это данные, которые хранит строка

Скорость выполнения операций 

Поиск элемента в хорошей хэш-таблице занимает О(1).
В хорошо сбалансированном дереве — O(log(n)).
В массиве — O(n).
Наилучшие алгоритмы сортировки имеют сложность O(n*log(n)).
Плохие алгоритмы сортировки — O(n2).


Основной алгоритм сортировки в СУБД сортировка слиянием

Данные в БД можно представить в виде: двумерного массива, бинарного дерева, бинарного дерева+


Для поиска удобно использовать хэш-таблицу. Это когда с помощью какого-то алгоритма мы делим все данные на блоки(группы) и тогда легче их будет искать.
Например: Брать у чисел остаток от деления на 10 и раскидывать их по блокам, номер которого соответствует остатку


										Недостатки

Один из основных недостатков это вертикальная масштабируемость. Т.е. чтобы увеличить мощности нашей базы данных мы можем прокачать сервер, на котором она хранится. В современных реалиях часто используют горизонтальную масштабируемость(объединяя несколько серверов) реляционные БД в таких ситуациях плохо себя показывают, поэтому не подходят для работы с облачными хранилищами.

Не всегда таблица лучший вид представления данных, жесткие ограничения на форму представления данных(столбцы таблицы нельзя менять), сложность в работе

										Ключи в БД
Первичный ключ – это поле, которое используется для обеспечения уникальности данных в таблице. Это означает, что значение (информация) в поле первичного ключа в каждой строке (записи) таблицы может быть уникальным.

Уникальность необходима во избежание неоднозначности, когда неизвестно к какой записи таблицы можно обратиться, если в таблице есть повторяющиеся записи (две записи имеют одинаковые значения во всех полях таблицы).

Внешний ключ – это одно или несколько полей (атрибутов), которые являются первичными в другой таблице и значение которых заменяется значениями первичного ключа другой таблицы.

Могут ли первичный и внешний ключи быть простыми или составными (сложными)?
Первичный, вторичный и внешний ключи могут быть как простыми так и составными (сложными). Простые ключи – это ключи, которые содержат только одно поле (один атрибут). Составные (сложные) ключи – это ключи, которые содержат несколько полей (атрибутов).

Естественной ключ обеспечивает уникальность из самой сущности предметной области. Бывают случаи, когда значения записей некоторого поля (полей) таблицы есть уникальными. Это поле может быть естественным ключом.

Искусственный ключ вводится дополнительно для обеспечения уникальных значений. Чаще всего искусственный ключ есть полем типа счетчик (counter). В таком поле, при добавлении новой записи (строки) в таблицу, значение счетчика увеличивается на 1 (или другую величину). Если запись удалить из таблицы, то максимальное значение счетчика строк уже не уменьшается, а остается как есть. Как правило, за этим все следит система управления базами данных.


					Какие существуют типы отношений (связей) между таблицами?
Существует 3 основных типа отношений между таблицами:

«один к одному». 

«один ко многим». 

«много ко многим». 