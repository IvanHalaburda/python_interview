Если методы были паблик, а надо сделать их приватными, то чтобы не менять целиком
код и не ломать программу, используют property либо @property




property(fget=None, fset=None, fdel=None, doc=None) - какие значения может принимать функция
(по умолчанию None, т.е. необязательно давать всем значение)

class Person:
    def __init__(self, name):
        self._name = name

    def get_name(self):
        print('Getting name')
        return self._name

    def set_name(self, value):
        print('Setting name to ' + value)
        self._name = value

    def del_name(self):
        print('Deleting name')
        del self._name

    # Set property to use get_name, set_name
    # and del_name methods
    name = property(get_name, set_name, del_name, 'Name property')
    #указываем какие фнукции будут выполнять роль геттера, сеттера, делеттера

p = Person('Adam')
print(p.name)
p.name = 'John'
del p.name



ДЕКОРАТОР

class Person:
    def __init__(self, name):
        self._name = name

    @property
    def name(self):
        print('Getting name')
        return self._name

    @name.setter
    def name(self, value):
        print('Setting name to ' + value)
        self._name = value

    @name.deleter
    def name(self):
        print('Deleting name')
        del self._name

p = Person('Adam')
print('The name is:', p.name)
p.name = 'John'
del p.name

Метод должен иметь одинаковое название
декоратор для сеттера и делеттера должен
иметь такое же имя, как и метод(example: 'name')