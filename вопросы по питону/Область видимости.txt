В Python существует целых 3 области видимости:

Локальная
Глобальная
Нелокальная

Локальная :
а)  def print_list(some_list):
        for element in some_list:
            print(element) 

    element = 'q'
    print_list([1, 2, 3])
    print(element)
    И получим:

    1
    2
    3
    q

    Здесь переменная element внутри функции и переменная с таким же именем вне ее – это две разные переменные, их значения не перекрещиваются и не взаимозаменяются. Они называются одинаково, но ссылаются на разные объекты в памяти.


б)  def print_list(some_list):
        for element in sudden_list:
            print(element) 

    sudden_list = [0, 0, 0]
    print_list([1, 2, 3])

    Результат:

    0
    0
    0

    Обратите внимание на то, что интерпретатор не указал нам на ошибки. А все потому что sudden_list находится в глобальной области видимости, то есть изнутри функции print_list мы можем к нему обращаться, поскольку изнутри видно то, что происходит снаружи.

Глобальная:
    В Python есть ключевое слово global, которое позволяет изменять изнутри функции значение глобальной переменной. Оно записывается перед именем переменной, которая дальше внутри функции будет считаться глобальной. Как видно из примера, теперь значение переменной candy увеличивается, и обратите внимание на то, что мы не передаем ее в качестве аргумента функции get_candy().

    candy = 5

    def get_candy():
        global candy 
        candy += 1
        print('У меня {} конфет.'.format(candy))
        
    get_candy()
    get_candy()
    print(candy)

    В результате получим:

        У меня 6 конфет.
    У меня 7 конфет.
    7

Нелокальная:

    Появилось это понятие в Python 3 вместе с ключевым словом nonlocal. Логика его написания примерно такая же, как и у global. Однако у nonlocal есть особенность. Nonlocal используется чаще всего во вложенных функциях, когда мы хотим дать интерпретатору понять, что для вложенной функции определенная переменная не является локальной, но она и не является глобальной в общем смысле.

    def get_candy():
        candy = 5
        def increment_candy(): 
            nonlocal candy
            candy += 1
            return candy
        return increment_candy
        
    result = get_candy()()
    print('Всего {} конфет.'.format(result))

    Результат:

    Всего 6 конфет.